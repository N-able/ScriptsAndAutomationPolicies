<#
Name: get-log4jrcevulnerability.ps1
Version: 0.1.6 (13th December 2021)
Author: Prejay Shah (Doherty Associates)
Purpose: Detection of jar files vulnerable to log4j RCE vulnerability (CVE-2021-44228)
Utilizing detection method posted to https://gist.github.com/Neo23x0/e4c8b03ff8cdf1fa63b7d15db6e3860b with some slight modifications to make it more RMM friendly
get-childitem -rec -include *.jar -ea 0 | foreach-object {select-string "JndiLookup.class" $_} | select-object -exp Path | sort-object -unique    

0.1 Initial Release
0.1.1 Adeed Dedupe to Vulnerable .JAR Listings
0.1.2 Public Release
0.1.3 Found that use of -force isn't working for all scans. Have added a non forced mode to see what outputs can be obtained
0.1.4 Experimenting with Unicode/Robocopy to bypass 260 character file path limit / access denied errors
0.1.5 added support for pseverything module
0.1.5.1 changed PSeverything detection to be module based rather than command based
0.1.5.2 Cleaned up Output
0.1.6 Added support for searching all local drives.
#>

$Version = "0.1.5.2" # 13th December 2021
$log4jlocaldisks = Get-PSDrive -PSProvider FileSystem | Where-Object {($_.Used -ne 0)} | select -expandProperty root
Write-Host "get-log4jrcevulnerability $version" -foregroundcolor Green

if (get-module -listavailable | where-object {$_.name -like 'PSEverything'}) {
    Write-Host "The almighty PSEverything module's Search-Everything command was found.`nDoing a new scan because we can..." -ForegroundColor Yellow
    $log4jfiles = $null
    $log4jfilescan = $null
    $Timetaken = (measure-command {$log4jfilescan = search-everything -global -extension jar}).totalseconds
    Write-host "See? That only took $timetaken seconds to scan the entire C: Drive for .jar files!" -foregroundcolor Green
    $log4jfilenames = $log4jfilescan 
}
else {
    try {
        $log4jfilescan = get-childitem $log4jlocaldisks -rec -force -include *.jar -ea 0 
        $log4jfilenames = ($log4jfilescan).fullname  
    }
    catch {
        Write-Host "WARNING: Forced Scan failed. Reattempting without -force paramter.." -ForegroundColor Yellow
        $log4jfilescan = get-childitem $log4jlocaldisks -rec -include *.jar -ea 0   
        if ($? -eq $false) {
            $log4jfiles = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - ERROR: Unable to scan files"
            $log4jvulnerable = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - ERROR: Unable to scan files"
            $log4jvulnerablefilecount = '-1'
            Write-Host $log4jfiles -ForegroundColor Red
            Exit 1
        }
        else {
            $log4jfilenames = ($log4jfilescan).fullname 
        }
    }
}

if ($log4jfilescan -eq $null) {
    $log4jfiles = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') N/A - No JAR Files were found on this device"
    $log4jvulnerable = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') N/A - No JAR Files were found on this device"
    $log4jvulnerablefilecount = '0'
    Write-Host "$log4jvulnerable" -ForegroundColor Green
}
else {
    Write-Host "Determining whether any of the $(($log4jfilenames).count) found .jar files are vulnerable to CVE-2021-44228 due to being capable of JNDI lookups..." -ForegroundColor Yellow
    $log4jvulnerablefiles = $log4jfilescan | foreach-object {select-string "JndiLookup.class" $_} | select-object -exp Path | sort-object -unique
    $log4jvulnerablefilecount = ($log4jvulnerablefiles).count
    if ($log4jvulnerablefiles -eq $null) {
        $log4jvulnerable = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') OK - 0 Vulnerable JAR files were found"
        write-host "Log4J CVE-2021-44228 Vulnerable Files:`n$log4jvulnerable" -ForegroundColor Green
    }
    else {
        Write-Host "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') WARNING - $log4jvulnerablefilecount Vulnerable JAR file(s) were found" -foregroundcolor Red
        write-host "Log4J CVE-2021-44228 Vulnerable Files:`n$log4jvulnerablefiles" -ForegroundColor Red
        $log4jvulnerable = $log4jvulnerablefiles -join '<br>'
    }
    # Write-Host "Log4j Files found:`n$log4jfiles"
    $log4jfiles = $log4jfilenames -join '<br>'
}